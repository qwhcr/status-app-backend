{"version":3,"sources":["Main/Room.js","appData.js","Main/Main.js","Join/Join.js","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","Occupant","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","timeAgoFormatter","e1","e2","renderStatus","radioStyle","type","selectedValue","data","statuses","length","selected","react_default","a","createElement","es_radio","Group","disabled","loading","buttonStyle","value","onChange","onStatusChange","map","v","i","Button","style","status_name","lib_default","date","selected_at","formatter","status","state","name","quietLevel","roomStyle","backgroundColor","nickname","card","row","align","col","span","margin","display","height","lineHeight","Component","baseUrl","process","REACT_APP_API_SOURCE","Main","getData","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","currentUser","headers","Authorization","token","sent","setState","stop","_ref2","_callee2","e","_context2","current_user","target","abrupt","_x","apply","arguments","renderOccupants","occupantElements","currentUserData","push","Room","other_occupants","forEach","Cookies","interval","setInterval","_callee3","_context3","_this2","_this3","remove","path","react_router","to","className","marginTop","minHeight","Date","now","es_button","shape","icon","onClick","signin","_ref","userName","userPassword","post","id","password","console","log","_x2","SignIn","_useState","useState","_useState2","slicedToArray","setUserName","_useState3","_useState4","setPassword","_useState5","_useState6","verified","setVerified","placeholder","event","react_router_dom","result","expireDate","setDate","getDate","set","expires","_x3","App","exact","component","Join","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01c5c66c.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Col, Row} from 'antd';\nimport {Radio} from 'antd';\nimport {Typography} from 'antd'\nimport {Card} from 'antd'\nimport TimeAgo from 'react-timeago'\nconst {Title} = Typography;\n\n\nclass Occupant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: null,\n      quietLevel: null,\n      loading: false\n    };\n  }\n\n  timeAgoFormatter = (e1, e2) => {\n    return e1 + \" \" + e2;\n  }\n\n  renderStatus = (radioStyle) => {\n    if (this.props.type === \"currentUser\") {\n      var selectedValue = 0;\n      for (; selectedValue < this.props.data.statuses.length; selectedValue++) {\n        if (this.props.data.statuses[selectedValue].selected === 1) {\n          break;\n        }\n      }\n      return (\n        <Radio.Group disabled={this.props.loading} buttonStyle=\"solid\" value={selectedValue}\n          onChange={this.props.onStatusChange}\n        >\n          {\n            this.props.data.statuses.map((v, i) => {\n              if (i == selectedValue) {\n                return (\n                  <div>\n                    <Radio.Button value={i}\n                      style={radioStyle}>\n\n                      {v.status_name + \" for \"}\n                      <TimeAgo date={v.selected_at * 1000} formatter={this.timeAgoFormatter} />\n\n                    </Radio.Button>\n                  </div>\n                )\n              }\n              return (\n                <div>\n                  <Radio.Button value={i} style={radioStyle}>{v.status_name}</Radio.Button>\n                </div>\n              )\n            })\n          }\n        </Radio.Group>\n      )\n    } else if (this.props.type === \"otherOccupant\") {\n\n      return (\n        <Radio.Group disabled={this.props.loading} buttonStyle=\"solid\" value={1}>\n          {\n            <div>\n              <Radio.Button value={1} style={radioStyle}>{this.props.data.status.status_name + \" for \"}\n                <TimeAgo date={this.props.data.status.selected_at * 1000} formatter={this.timeAgoFormatter} />\n              </Radio.Button>\n            </div>\n          }\n        </Radio.Group>\n      )\n    }\n  }\n\n\n  render() {\n    const radioStyle = {\n      margin: \"15px\",\n      display: 'block',\n      height: '30px',\n      lineHeight: '30px',\n    };\n    var roomStyle\n    const sleepStyle = {\n      backgroundColor: \"rgb(46, 64, 89)\",\n    }\n    const normalStyle = {}\n\n    if (this.props.quietLevel === 4) {\n      roomStyle = sleepStyle\n    } else {\n      roomStyle = normalStyle\n    }\n    var nickname = this.props.data != null ? this.props.data.nickname : \"\";\n\n    return (\n      <div>\n        <Card loading={this.props.loading} style={roomStyle}>\n          <Row type=\"flex\" align=\"middle\">\n            <Col span={12}>\n              <Title>{nickname}</Title>\n            </Col>\n            <Col span={12}>\n              {this.renderStatus(radioStyle)}\n            </Col>\n          </Row>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default Occupant;\n","let baseUrl = 'http://localhost:5000/api'\nif (process.env.REACT_APP_API_SOURCE !== 'dev') {\n  baseUrl = 'https://status-app.creat-ive.net/api'\n}\n\nexport default baseUrl\n","import React, {Component} from 'react';\nimport './Main.css';\nimport {Button} from 'antd'\nimport {Col, Row} from 'antd';\nimport Occupant from './Room.js'\nimport axios from 'axios'\nimport TimeAgo from 'react-timeago'\nimport baseUrl from '../appData'\nimport Cookies from \"js-cookie\"\nimport {Redirect} from 'react-router-dom';\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      loading: true,\n      token: Cookies.get(\"default\"),\n      currentUser: Cookies.get(\"currentUser\")\n    }\n  }\n\n  getData = async () => {\n    let res = await axios.get(baseUrl + '/status?userid=' + this.state.currentUser\n      + '&roomid=' + 'ed91a75f-68e0-4cc2-b453-1bb61571fc11',\n      {\n        headers: {\n          'Authorization': 'Bearer ' + this.state.token\n        }\n      }\n    );\n    if (res.status == 200) {\n      this.setState({data: res.data, loading: false})\n    }\n    if (res.status == 401) {\n      this.setState({token: null})\n    }\n  }\n\n  onStatusChange = async (e) => {\n    let res = await axios.get(baseUrl + \"/update?userid=\" + this.state.currentUser\n      + '&roomid=' + 'ed91a75f-68e0-4cc2-b453-1bb61571fc11' + '&statusname='\n      + this.state.data.current_user.statuses[e.target.value].status_name,\n      {\n        headers: {\n          'Authorization': 'Bearer ' + this.state.token\n        }\n      })\n    if (res.status == 200) {\n      await this.getData();\n    }\n    if (res.status == 401) {\n      this.setState({token: null})\n    }\n    return;\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.interval = setInterval(async () => {\n      await this.getData()\n    }, 30000);\n  }\n\n\n\n  renderOccupants = () => {\n    let occupantElements = [];\n    if (this.state.data != null) {\n      let currentUserData = this.state.data.current_user;\n      occupantElements.push(\n        <Occupant data={currentUserData} type={\"currentUser\"} onStatusChange={this.onStatusChange} loading={false}/>\n      )\n      let otherOccupantsData = this.state.data.other_occupants;\n      otherOccupantsData.forEach((v) => {\n         occupantElements.push(\n          <Occupant data={v} type={\"otherOccupant\"} loading={false}/>\n        );\n      });\n    }\n    return occupantElements;\n  }\n\n  render() {\n    if (this.state.token == null) {\n      Cookies.remove(\"default\", {path: \"/\"});\n      return (\n        <Redirect to=\"/\"/>\n      )\n    }\n    if (this.state.data == null) {\n      return (\n        <div className=\"Main\">\n          <Occupant loading={this.state.loading} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"Main\">\n          {this.renderOccupants()}\n          <Row type=\"flex\" align=\"middle\" style={{marginTop: \"10px\", minHeight: \"50px\"}}>\n            <Col span={12}>\n              Last Updated:\n          <TimeAgo date={Date.now()}></TimeAgo>\n            </Col>\n            <Col span={12}>\n              <Button shape=\"round\" icon=\"reload\" onClick={this.getData}>Refresh</Button>\n            </Col>\n          </Row>\n          <Button onClick={() => {\n            Cookies.remove(\"default\", {path: \"/\"});\n            Cookies.remove(\"currentUser\", {path: \"/\"});\n            this.setState({token: null})\n          }}> logout </Button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Main;\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport baseUrl from '../appData'\nimport Cookies from \"js-cookie\"\nimport './Join.css';\n\nconst signin = async (userName, userPassword) => {\n  let res = await axios.post(baseUrl + \"/auth/signin\", {id: userName, password: userPassword});\n\n  if (res.status !== 200) {\n    console.log(\"not verified:\", res);\n    return null;\n  }\n  return res.data.token;\n}\n\nexport default function SignIn() {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [verified, setVerified] = useState(false);\n  if (verified || Cookies.get(\"default\") != null) {\n    return (<Redirect to='/main'/>)\n  }\n\n  return (\n    <div className=\"joinOuterContainer\">\n      <div className=\"joinInnerContainer\">\n        <h1 className=\"heading\">Join</h1>\n        <div>\n          <input placeholder=\"Username\" className=\"joinInput\" type=\"text\" onChange={(event) => setUserName(event.target.value)} />\n        </div>\n        <div>\n          <input placeholder=\"Password\" className=\"joinInput mt-20\" type=\"password\" onChange={(event) => setPassword(event.target.value)} />\n        </div>\n        <Link onClick={async (e) => {\n          if (!userName || !password) {\n            return;\n          }\n          let result = await signin(userName, password);\n          if (result === null) {\n            return;\n          }\n          let expireDate = new Date();\n          expireDate.setDate(expireDate.getDate() + 30);\n          Cookies.set(\"default\", result, {expires: 30});\n          Cookies.set(\"currentUser\", userName, {expires: 30})\n          setVerified(true);\n        }} to={`#`}>\n          <button className={'button mt-20'} type=\"submit\">Sign In</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Main from './Main/Main';\nimport Join from './Join/Join';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Join} />\n      <Route path=\"/main\" component={Main} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}